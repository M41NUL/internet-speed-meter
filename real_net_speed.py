# =============================================
#  Encoded by     : MAINUL - X Encoder Tool
#  Encoding Method: DOUBLE Marshal + Base64
#  Encoded Date   : 2025-05-23 18:52:31
#  Python Version : 3.12.10
#  Warning        : Do not edit this file manually!
# =============================================

import marshal, base64
exec(marshal.loads(base64.b64decode('')))
